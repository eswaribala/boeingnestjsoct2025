services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"

    volumes:
      - mongo_data:/data/db
    networks:
      - boeingnetwork
  postgres:
    image: postgres:16
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: transactiondb
    ports:
      - "5432:5432"

    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:                        # ðŸ‘ˆ required for depends_on: condition: service_healthy
      test: ["CMD-SHELL", "pg_isready -U postgres -d transactiondb"]
      interval: 5s
      timeout: 3s
      retries: 10
    

  account-api:
    image: account-api:latest
    container_name: account-api
    ports:
      - "3001:3001"
    env_file:
      - .env
    depends_on:
      - mongodb
    networks:
      - boeingnetwork
  transaction-api:
    image: transaction-api:latest
    container_name: transaction-api
    environment:
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: transactiondb
      # If you pass host/URL, ensure:
      DB_HOST: host.docker.internal
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/transactiondb
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy   # ðŸ‘ˆ matches the service key
    restart: unless-stopped
    networks:
      - boeingnetwork

networks:
  boeingnetwork:
    driver: bridge
volumes:
  mongo_data:
  pgdata: